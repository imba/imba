<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Imba</string>
    <key>scopeName</key>
    <string>source.imba</string>
    <key>fileTypes</key>
    <array>
      <string>imba</string>
      <string>imba2</string>
    </array>
    <key>uuid</key>
    <string>ef98eb90-bf9b-11e4-bb52-0800200c9a67</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#root</string>
      </dict>
      <dict>
        <key>name</key>
        <string>comment.line.shebang.imba</string>
        <key>match</key>
        <string>\A(#!).*(?=$)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.imba</string>
          </dict>
        </dict>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>root</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#block</string>
          </dict>
        </array>
      </dict>
      <key>block</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#style-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-keys</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#plain-identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#plain-accessors</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pairs</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#invalid-indentation</string>
          </dict>
        </array>
      </dict>
      <key>expr</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#style-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-keys</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#plain-identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#plain-accessors</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pairs</string>
          </dict>
        </array>
      </dict>
      <key>literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#number-with-unit-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numeric-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#null-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#undefined-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numericConstant-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#this-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#global-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#super-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
        </array>
      </dict>
      <key>pairs</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#curly-braces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#square-braces</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#round-braces</string>
          </dict>
        </array>
      </dict>
      <key>curly-braces</key>
      <dict>
        <key>begin</key>
        <string>\s*(\{)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.curly.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>square-braces</key>
      <dict>
        <key>begin</key>
        <string>\s*(\[)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>round-braces</key>
      <dict>
        <key>begin</key>
        <string>\s*(\()</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.imba</string>
            <key>match</key>
            <string>(if|elif|else|unless|switch|when|then|do|import|export|for own|for|while|until|return|try|catch|await|finally|throw|as|continue|break|extend|augment)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.imba</string>
            <key>match</key>
            <string>(?&lt;=export)\s+(default)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.imba</string>
            <key>match</key>
            <string>(?&lt;=import)\s+(type)(?=\s+[\w\{\$\_])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.imba</string>
            <key>match</key>
            <string>(extend|global)\s+(?=class|tag)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.imba</string>
            <key>match</key>
            <string>(?&lt;=[\*\}\w\$])\s+(from)(?=\s+[\"\'])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.function.imba</string>
            <key>match</key>
            <string>(def|get|set)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.class.imba</string>
            <key>match</key>
            <string>(tag|class|struct)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.imba</string>
            <key>match</key>
            <string>(let|const|constructor)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.imba</string>
            <key>match</key>
            <string>(prop|attr)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.modifier.imba</string>
            <key>match</key>
            <string>(static)\s+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.modifier.imba</string>
            <key>match</key>
            <string>(declare)\s+</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#ops</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.imba</string>
            <key>match</key>
            <string>(=|\|\|=|\?\?=|\&amp;\&amp;=|\+=|\-=|\*=|\^=|\%=)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.imba</string>
            <key>match</key>
            <string>(\&gt;\=?|\&lt;\=?)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.imba</string>
            <key>match</key>
            <string>(of|delete|\!?isa|typeof|in|new)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
        </array>
      </dict>
      <key>ops</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.spread.imba</string>
            <key>match</key>
            <string>\.\.\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.imba</string>
            <key>match</key>
            <string>\*=|(?&lt;!\()/=|%=|\+=|\-=|\?=|\?\?=|=\?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.bitwise.imba</string>
            <key>match</key>
            <string>\^=\?|\|=\?|\~=\?|\&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.shift.imba</string>
            <key>match</key>
            <string>&lt;&lt;|&gt;&gt;&gt;|&gt;&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.comparison.imba</string>
            <key>match</key>
            <string>===|!==|==|!=|~=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.relational.imba</string>
            <key>match</key>
            <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\!)\s*(/)(?![/*])</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.logical.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.arithmetic.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.logical.imba</string>
            <key>match</key>
            <string>\!|&amp;&amp;|\|\||\?\?|or\b(?=\s|$)|and\b(?=\s|$)|\@\b(?=\s|$)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.imba</string>
            <key>match</key>
            <string>\&amp;|~|\^|\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.imba</string>
            <key>match</key>
            <string>\=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.decrement.imba</string>
            <key>match</key>
            <string>--</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.increment.imba</string>
            <key>match</key>
            <string>\+\+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.arithmetic.imba</string>
            <key>match</key>
            <string>%|\*|/|-|\+</string>
          </dict>
        </array>
      </dict>
      <key>object-keys</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?\:</string>
            <key>name</key>
            <string>meta.object-literal.key</string>
          </dict>
        </array>
      </dict>
      <key>invalid-indentation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>invalid.whitespace</string>
            <key>match</key>
            <string>^[\ ]+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>invalid.whitespace</string>
            <key>match</key>
            <string>^\t+\s+</string>
          </dict>
        </array>
      </dict>
      <key>style-property</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.property-name.css</string>
            <key>begin</key>
            <string>(?=(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.calc.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\s*\:</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.key-value.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>support.type.property-name.variable.css</string>
                <key>match</key>
                <string>(?:--|\$)[\w\-\$]+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>support.type.property-name.modifier.breakpoint.css</string>
                <key>match</key>
                <string>\@[\!\&lt;\&gt;]?[0-9]+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>support.type.property-name.modifier.css</string>
                <key>match</key>
                <string>\@[\w\-\$]+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>support.type.property-name.modifier.up.css</string>
                <key>match</key>
                <string>\.\.[\w\-\$]+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>support.type.property-name.modifier.is.css</string>
                <key>match</key>
                <string>\.[\w\-\$]+</string>
              </dict>
              <dict>
                <key>name</key>
                <string>support.type.property-name.css</string>
                <key>match</key>
                <string>[\w\-\$]+</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>style-expr</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\b[0-9][0-9_]*)(\w+|%)?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.integer.decimal.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unit.css</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>support.constant.property-value.var.css</string>
            <key>match</key>
            <string>--[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.constant.property-value.size.css</string>
            <key>match</key>
            <string>(x+s|sm-|md-|lg-|sm|md|lg|x+l|hg|x+h)(?![\w-])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.constant.property-value.css</string>
            <key>match</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.css</string>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#style-expr</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>inline-styles</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#style-property</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-property-values</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#style-expr</string>
          </dict>
        </array>
      </dict>
      <key>style-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.style.imba</string>
        <key>begin</key>
        <string>^(\t*)(?:(global|local|export)\s+)?(?:(scoped)\s+)?(css)\s</string>
        <key>beginCaptures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.control.export.imba</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.imba</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>storage.type.style.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>^(?!(\1\t|\s*$))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#css-selector</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nested-css-selector</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#inline-styles</string>
          </dict>
        </array>
      </dict>
      <key>nested-style-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.style.imba</string>
        <key>begin</key>
        <string>^(\t+)(?=[\n^]*\&amp;)</string>
        <key>end</key>
        <string>^(?!(\1\t|\s*$))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#nested-css-selector</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#inline-styles</string>
          </dict>
        </array>
      </dict>
      <key>css-size-keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.constant.size.property-value.css</string>
            <key>match</key>
            <string>(x+s|sm-|md-|lg-|sm|md|lg|x+l|hg|x+h)(?![\w-])</string>
          </dict>
        </array>
      </dict>
      <key>css-color-keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>support.constant.color.w3c-standard-color-name.css</string>
            <key>match</key>
            <string>(?i)(?&lt;![\w-])(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)(?![\w-])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.constant.color.w3c-extended-color-name.css</string>
            <key>match</key>
            <string>(?xi) (?&lt;![\w-])
(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood
|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan
|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange
|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise
|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen
|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki
|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow
|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray
|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue
|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise
|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered
|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum
|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell
|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato
|transparent|turquoise|violet|wheat|whitesmoke|yellowgreen)
(?![\w-])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.constant.color.current.css</string>
            <key>match</key>
            <string>(?i)(?&lt;![\w-])currentColor(?![\w-])</string>
          </dict>
        </array>
      </dict>
      <key>css-functions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.function.calc.css</string>
            <key>begin</key>
            <string>(?i)(?&lt;![\w-])(calc)(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.calc.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>keyword.operator.arithmetic.css</string>
                <key>match</key>
                <string>[*/]|(?&lt;=\s|^)[-+](?=\s|$)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.color.css</string>
            <key>begin</key>
            <string>(?i)(?&lt;![\w-])(rgba?|hsla?)(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.misc.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.gradient.css</string>
            <key>begin</key>
            <string>(?xi) (?&lt;![\w-])
(
  (?:-webkit-|-moz-|-o-)?    # Accept prefixed/historical variants
  (?:repeating-)?            # "Repeating"-type gradient
  (?:linear|radial|conic)    # Shape
  -gradient
)
(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.gradient.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>keyword.operator.gradient.css</string>
                <key>match</key>
                <string>(?i)(?&lt;![\w-])(from|to|at)(?![\w-])</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.gradient.invalid.deprecated.gradient.css</string>
            <key>begin</key>
            <string>(?i)(?&lt;![\w-])(-webkit-gradient)(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>invalid.deprecated.gradient.function.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?i)(?&lt;![\w-])(from|to|color-stop)(\()</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>invalid.deprecated.function.css</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.section.function.begin.bracket.round.css</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>\)</string>
                <key>endCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.section.function.end.bracket.round.css</string>
                  </dict>
                </dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#css-property-values</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.misc.css</string>
            <key>begin</key>
            <string>(?xi) (?&lt;![\w-])
(annotation|attr|blur|brightness|character-variant|contrast|counters?
|cross-fade|drop-shadow|element|fit-content|format|grayscale|hue-rotate
|image-set|invert|local|minmax|opacity|ornaments|repeat|saturate|sepia
|styleset|stylistic|swash|symbols)
(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.misc.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.numeric.other.density.css</string>
                <key>match</key>
                <string>(?i)(?&lt;=[,\s"]|\*/|^)\d+x(?=[\s,"')]|/\*|$)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
              <dict>
                <key>name</key>
                <string>variable.parameter.misc.css</string>
                <key>match</key>
                <string>[^'"),\s]+</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.shape.css</string>
            <key>begin</key>
            <string>(?i)(?&lt;![\w-])(circle|ellipse|inset|polygon|rect)(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.shape.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>keyword.operator.shape.css</string>
                <key>match</key>
                <string>(?i)(?&lt;=\s|^|\*/)(at|round)(?=\s|/\*|$)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.function.timing-function.css</string>
            <key>begin</key>
            <string>(?i)(?&lt;![\w-])(cubic-bezier|steps)(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.timing-function.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>support.constant.step-direction.css</string>
                <key>match</key>
                <string>(?i)(?&lt;![\w-])(start|end)(?=\s*\)|$)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?xi) (?&lt;![\w-])
( (?:translate|scale|rotate)(?:[XYZ]|3D)?
| matrix(?:3D)?
| skew[XY]?
| perspective
)
(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.transform.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.begin.bracket.round.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.function.end.bracket.round.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#css-property-values</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>css-numeric-values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.other.color.rgb-value.hex.css</string>
            <key>match</key>
            <string>(#)(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.constant.css</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.css</string>
            <key>match</key>
            <string>(?xi) (?&lt;![\w-])
[-+]?                               # Sign indicator

(?:                                 # Numerals
    [0-9]+ (?:\.[0-9]+)?           # Integer/float with leading digits
  | \.[0-9]+                       # Float without leading digits
)

(?:                                 # Scientific notation
  (?&lt;=[0-9])                        # Exponent must follow a digit
  E                                 # Exponent indicator
  [-+]?                             # Possible sign indicator
  [0-9]+                            # Exponent value
)?

(?:                                 # Possible unit for data-type:
  (%)                               # - Percentage
  | ( deg|grad|rad|turn             # - Angle
    | Hz|kHz                        # - Frequency
    | ch|cm|em|ex|fr|in|mm|mozmm|   # - Length
      pc|pt|px|q|rem|vh|vmax|vmin|
      vw
    | dpi|dpcm|dppx                 # - Resolution
    | s|ms                          # - Time
    )
  \b                               # Boundary checking intentionally lax to
)?                                  # facilitate embedding in CSS-like grammars</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unit.percentage.css</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unit.${2:/downcase}.css</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>css-combinators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.separator.combinator.css</string>
            <key>match</key>
            <string>&gt;&gt;&gt;|&gt;&gt;|&gt;|\+|~</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.parent-selector.css</string>
            <key>match</key>
            <string>&amp;</string>
          </dict>
        </array>
      </dict>
      <key>css-pseudo-classes</key>
      <dict>
        <key>name</key>
        <string>entity.other.attribute-name.pseudo-class.css</string>
        <key>match</key>
        <string>(?xi)
(:)(:*)
(?: active|any-link|checked|default|defined|disabled|empty|enabled|first
  | (?:first|last|only)-(?:child|of-type)|focus|focus-visible|focus-within
  | fullscreen|host|hover|in-range|indeterminate|invalid|left|link
  | optional|out-of-range|placeholder-shown|read-only|read-write
  | required|right|root|scope|target|unresolved
  | valid|visited
)(?![\w-]|\s*[;}])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.entity.css</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.colon.css</string>
          </dict>
        </dict>
      </dict>
      <key>css-pseudo-elements</key>
      <dict>
        <key>name</key>
        <string>entity.other.attribute-name.pseudo-element.css</string>
        <key>match</key>
        <string>(?xi)
(?:
  (::?)                       # Elements using both : and :: notation
  (?: after
    | before
    | first-letter
    | first-line
    | (?:-(?:ah|apple|atsc|epub|hp|khtml|moz
            |ms|o|rim|ro|tc|wap|webkit|xv)
        | (?:mso|prince))
      -[a-z-]+
  )
  |
  (::)                        # Double-colon only
  (?: backdrop
    | content
    | grammar-error
    | marker
    | placeholder
    | selection
    | shadow
    | spelling-error
  )
)
(?![\w-]|\s*[;}])</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.entity.css</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.entity.css</string>
          </dict>
        </dict>
      </dict>
      <key>css-commas</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.list.comma.css</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>css-comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.line.imba</string>
            <key>match</key>
            <string>\#(\s.+)?(\n|$)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.line.imba</string>
            <key>match</key>
            <string>(^\t+)(\#(\s.+)?(\n|$))</string>
          </dict>
        </array>
      </dict>
      <key>css-escapes</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.codepoint.css</string>
            <key>match</key>
            <string>\\[0-9a-fA-F]{1,6}</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.newline.css</string>
            <key>begin</key>
            <string>\\$\s*</string>
            <key>end</key>
            <string>^(?&lt;!\G)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.css</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
      <key>css-selector</key>
      <dict>
        <key>name</key>
        <string>meta.selector.css</string>
        <key>begin</key>
        <string>(?&lt;=css\s)(?!(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:)[^\:])</string>
        <key>end</key>
        <string>(\s*(?=(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:)[^\:])|\s*$|(?=\s+\#\s))</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.sel-properties.css</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#css-selector-innards</string>
          </dict>
        </array>
      </dict>
      <key>nested-css-selector</key>
      <dict>
        <key>name</key>
        <string>meta.selector.css</string>
        <key>begin</key>
        <string>(^\t+)(?!(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:)[^\:])</string>
        <key>end</key>
        <string>(\s*(?=(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:)[^\:])|\s*$|(?=\s+\#\s))</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.sel-properties.css</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#css-selector-innards</string>
          </dict>
        </array>
      </dict>
      <key>inline-css-selector</key>
      <dict>
        <key>name</key>
        <string>meta.selector.css</string>
        <key>begin</key>
        <string>(^\t+)(?!(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:))</string>
        <key>end</key>
        <string>(\s*(?=(?:[\@\.]+[\!\&lt;\&gt;]?)?[\w\-\$]+(?:[\@\.]+[\!\&lt;\&gt;]?[\w\-\$]+)*(?:\s*\:)|\)|\])|\s*$)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.sel-properties.css</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#css-selector-innards</string>
          </dict>
        </array>
      </dict>
      <key>css-selector-innards</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#css-commas</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-escapes</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-combinators</string>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.tag.wildcard.css</string>
            <key>match</key>
            <string>\*</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.attribute-selector.css</string>
            <key>begin</key>
            <string>\[</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.entity.begin.bracket.square.css</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\]</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.entity.end.bracket.square.css</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?&lt;=["'\s]|^|\*/)\s*([iI])\s*(?=[\s\]]|/\*|$)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>storage.modifier.ignore-case.css</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>(?x)(?&lt;==)\s*((?!/\*)(?:[^\\"'\s\]]|\\.)+)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>string.unquoted.attribute-value.css</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>include</key>
                <string>#css-escapes</string>
              </dict>
              <dict>
                <key>name</key>
                <string>keyword.operator.pattern.css</string>
                <key>match</key>
                <string>[~|^$*]?=</string>
              </dict>
              <dict>
                <key>name</key>
                <string>punctuation.separator.css</string>
                <key>match</key>
                <string>\|</string>
              </dict>
              <dict>
                <key>match</key>
                <string>(?x)
# Qualified namespace prefix
( -?(?!\d)(?:[\w-]|[^\\x00-\\x7F]|\\(?:[0-9a-fA-F]{1,6}|.))+
| \*
)
# Lookahead to ensure there's a valid identifier ahead
(?=
  \| (?!\s|=|$|\])
  (?: -?(?!\d)
   |   [\\\w-]
   |   [^\\x00-\\x7F]
   )
)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>entity.other.namespace-prefix.css</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>(?x)
(-?(?!\d)(?&gt;[\w-]|[^\\x00-\\x7F]|\\(?:[0-9a-fA-F]{1,6}|.))+)
\s*
(?=[~|^\]$*=]|/\*)</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>entity.other.attribute-name.css</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-pseudo-classes</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-pseudo-elements</string>
          </dict>
        </array>
      </dict>
      <key>css-property-values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#css-commas</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-escapes</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-functions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-numeric-values</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-size-keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#css-color-keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.important.css</string>
            <key>match</key>
            <string>!\s*important(?![\w-])</string>
          </dict>
        </array>
      </dict>
      <key>tag-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.tag.imba</string>
            <key>begin</key>
            <string>(&lt;)(?=[\w\{\[\.\#\$\@\(])</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.tag.open.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(&gt;)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.tag.close.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#tag-content</string>
              </dict>
            </array>
            <key>contentName</key>
            <string>meta.tag.attributes.imba</string>
          </dict>
        </array>
      </dict>
      <key>tag-content</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#tag-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-expr-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-content</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-parens</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-brackets</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-event-handler</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-classname</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-ref</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-attr-value</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-attr-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
        </array>
      </dict>
      <key>tag-name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>entity.name.tag.special.imba</string>
            <key>match</key>
            <string>(?&lt;=&lt;)(self|global|slot)(?=[\.\[\&gt;\s\(])</string>
          </dict>
        </array>
      </dict>
      <key>tag-expr-name</key>
      <dict>
        <key>begin</key>
        <string>(?&lt;=&lt;)(?=[\w\{])</string>
        <key>contentName</key>
        <string>entity.name.tag.imba</string>
        <key>end</key>
        <string>(?=[\.\[\&gt;\s\(])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-content</string>
          </dict>
        </array>
      </dict>
      <key>tag-interpolated-content</key>
      <dict>
        <key>name</key>
        <string>meta.tag.expression.imba</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.tag.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.tag.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
        <key>contentName</key>
        <string>meta.embedded.line.imba</string>
      </dict>
      <key>tag-interpolated-parens</key>
      <dict>
        <key>name</key>
        <string>meta.tag.expression.imba</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.tag.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.tag.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
        <key>contentName</key>
        <string>meta.embedded.line.imba</string>
      </dict>
      <key>tag-interpolated-brackets</key>
      <dict>
        <key>name</key>
        <string>meta.tag.expression.imba</string>
        <key>begin</key>
        <string>\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.tag.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.section.tag.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#inline-css-selector</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#inline-styles</string>
          </dict>
        </array>
        <key>contentName</key>
        <string>meta.embedded.line.imba</string>
      </dict>
      <key>tag-classname</key>
      <dict>
        <key>begin</key>
        <string>\.</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-content</string>
          </dict>
        </array>
        <key>end</key>
        <string>(?=[\.\[\&gt;\s\(\=])</string>
        <key>contentName</key>
        <string>entity.other.attribute-name.class.css</string>
      </dict>
      <key>tag-ref</key>
      <dict>
        <key>match</key>
        <string>(\$[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)</string>
        <key>name</key>
        <string>entity.other.attribute-name.reference.css</string>
      </dict>
      <key>tag-event-handler</key>
      <dict>
        <key>begin</key>
        <string>(\@[\w$_]+(?:\-[\w$_]+)*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.other.event-name.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-content</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-interpolated-parens</string>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.other.event-modifier.imba</string>
            <key>begin</key>
            <string>\.</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.section.tag</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#tag-interpolated-parens</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#tag-interpolated-content</string>
              </dict>
            </array>
            <key>end</key>
            <string>(?=[\.\[\&gt;\s\=]|$)</string>
          </dict>
        </array>
        <key>end</key>
        <string>(?=[\[\&gt;\s\=])</string>
        <key>contentName</key>
        <string>entity.other.tag.event</string>
      </dict>
      <key>tag-attr-name</key>
      <dict>
        <key>begin</key>
        <string>([\w$_]+(?:\-[\w$_]+)*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>entity.other.attribute-name.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\s\.\[\&gt;\=])</string>
        <key>contentName</key>
        <string>entity.other.attribute-name.imba</string>
      </dict>
      <key>tag-attr-value</key>
      <dict>
        <key>begin</key>
        <string>(\=)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.tag.assignment</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=&gt;|\s)</string>
        <key>contentName</key>
        <string>meta.tag.attribute-value.imba</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.brace.round.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.brace.round.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expr</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#tag-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressionWithoutIdentifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressionPunctuations</string>
          </dict>
        </array>
      </dict>
      <key>expressionWithoutIdentifiers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#ternary-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#new-expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#instanceof-expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression-operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#support-objects</string>
          </dict>
        </array>
      </dict>
      <key>expressionPunctuations</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-accessor</string>
          </dict>
        </array>
      </dict>
      <key>decorator</key>
      <dict>
        <key>name</key>
        <string>meta.decorator.imba</string>
        <key>begin</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))\@(?!\@)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.decorator.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\s)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
        </array>
      </dict>
      <key>array-literal</key>
      <dict>
        <key>name</key>
        <string>meta.array.literal.imba</string>
        <key>begin</key>
        <string>\s*(\[)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>type-literal</key>
      <dict>
        <key>name</key>
        <string>meta.type.annotation.imba</string>
        <key>begin</key>
        <string>(\\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.type.annotation.open.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\s\]\)\,\.\=\}]|$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-brackets</string>
          </dict>
        </array>
      </dict>
      <key>type-brackets</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type-brackets</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\[</string>
            <key>end</key>
            <string>\]</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type-brackets</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\&lt;</string>
            <key>end</key>
            <string>\&gt;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type-brackets</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type-brackets</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>numeric-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.hex.imba</string>
            <key>match</key>
            <string>\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.binary.imba</string>
            <key>match</key>
            <string>\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.octal.imba</string>
            <key>match</key>
            <string>\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
(?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b)                                 # 1
)(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.imba</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.imba</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.imba</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>8</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.imba</string>
              </dict>
              <key>9</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>10</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.imba</string>
              </dict>
              <key>11</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>12</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.imba</string>
              </dict>
              <key>13</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
              <key>14</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.imba</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>number-with-unit-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>([0-9]+)([a-z]+|\%)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unit.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>([0-9]*\.[0-9]+(?:[eE][\-+]?[0-9]+)?)([a-z]+|\%)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unit.imba</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>boolean-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.true.imba</string>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(true|yes)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.boolean.false.imba</string>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(false|no)(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
        </array>
      </dict>
      <key>null-literal</key>
      <dict>
        <key>name</key>
        <string>constant.language.null.imba</string>
        <key>match</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))null(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
      </dict>
      <key>this-literal</key>
      <dict>
        <key>name</key>
        <string>variable.language.this.imba</string>
        <key>match</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(this|self)\b(?!\$)</string>
      </dict>
      <key>global-literal</key>
      <dict>
        <key>name</key>
        <string>variable.language.global.imba</string>
        <key>match</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(global)\b(?!\$)</string>
      </dict>
      <key>super-literal</key>
      <dict>
        <key>name</key>
        <string>variable.language.super.imba</string>
        <key>match</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))super\b(?!\$)</string>
      </dict>
      <key>undefined-literal</key>
      <dict>
        <key>name</key>
        <string>constant.language.undefined.imba</string>
        <key>match</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))undefined(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
      </dict>
      <key>numericConstant-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.language.nan.imba</string>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))NaN(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.language.infinity.imba</string>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))Infinity(?![\?_\-$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
        </array>
      </dict>
      <key>plain-identifiers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>variable.other.constant.imba</string>
            <key>match</key>
            <string>([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.class.imba</string>
            <key>match</key>
            <string>[[:upper:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.special.imba</string>
            <key>match</key>
            <string>\$\d+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.internal.imba</string>
            <key>match</key>
            <string>\$[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.symbol.imba</string>
            <key>match</key>
            <string>\@\@+[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.readwrite.imba</string>
            <key>match</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.instance.imba</string>
            <key>match</key>
            <string>\@[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.private.imba</string>
            <key>match</key>
            <string>\#+[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.symbol.imba</string>
            <key>match</key>
            <string>\:[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?</string>
          </dict>
        </array>
      </dict>
      <key>plain-accessors</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\.\.?)([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.other.property.imba</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>identifiers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)(?:(?:(\.)|(\.\.(?!\s*[[:digit:]]|\s+)))\s*)?([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)(?=\s*={{functionOrArrowLookup}})</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.property.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:(\.)|(\.\.(?!\s*[[:digit:]]|\s+)))\s*(\#?[[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.constant.property.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:(\.)|(\.\.(?!\s*[[:digit:]]|\s+)))([[:upper:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\!]?)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.class.property.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:(\.)|(\.\.(?!\s*[[:digit:]]|\s+)))(\#?[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.property.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other</string>
            <key>match</key>
            <string>(for own|for|if|unless|when)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.function.require</string>
            <key>match</key>
            <string>require</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#plain-identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-literal</string>
          </dict>
        </array>
      </dict>
      <key>type-annotation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-literal</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.comma.imba</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>punctuation-semicolon</key>
      <dict>
        <key>name</key>
        <string>punctuation.terminator.statement.imba</string>
        <key>match</key>
        <string>;</string>
      </dict>
      <key>punctuation-accessor</key>
      <dict>
        <key>match</key>
        <string>(?:(\.)|(\.\.(?!\s*[[:digit:]]|\s+)))</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.accessor.imba</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.accessor.optional.imba</string>
          </dict>
        </dict>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#qstring-single-multi</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#qstring-double-multi</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#qstring-single</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#qstring-double</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template</string>
          </dict>
        </array>
      </dict>
      <key>qstring-double</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.imba</string>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>"</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#template-substitution-element</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>qstring-single</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.imba</string>
        <key>begin</key>
        <string>'</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\')|((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.imba</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>qstring-single-multi</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.imba</string>
        <key>begin</key>
        <string>'''</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>'''</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>string-character-escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.imba</string>
        <key>match</key>
        <string>\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\{[0-9A-Fa-f]+\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)</string>
      </dict>
      <key>template</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.template.imba</string>
            <key>begin</key>
            <string>(?=(([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?\s*\??\.\s*)*|(\??\.\s*)?)([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)({{typeArguments}}\s*)?`)</string>
            <key>end</key>
            <string>(?=`)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?=(([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?\s*\??\.\s*)*|(\??\.\s*)?)([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?))</string>
                <key>end</key>
                <string>(?=({{typeArguments}}\s*)?`)</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>name</key>
                    <string>entity.name.function.tagged-template.imba</string>
                    <key>match</key>
                    <string>([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.template.imba</string>
            <key>begin</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)\s*(?=({{typeArguments}}\s*)`)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.tagged-template.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=`)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#type-arguments</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.template.imba</string>
            <key>begin</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?)?(`)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.tagged-template.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.template.begin.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>`</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.template.end.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#template-substitution-element</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string-character-escape</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>template-substitution-element</key>
      <dict>
        <key>name</key>
        <string>meta.template.expression.imba</string>
        <key>begin</key>
        <string>(?&lt;!\\)\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.template-expression.begin.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.template-expression.end.imba</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expr</string>
          </dict>
        </array>
        <key>contentName</key>
        <string>meta.embedded.line.imba</string>
      </dict>
      <key>regex</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.regexp.imba</string>
            <key>begin</key>
            <string>(?&lt;!\+\+|--|})(?&lt;=[=(:,\[?+!]|^return|[^\._$[:alnum:]]return|^case|[^\._$[:alnum:]]case|=&gt;|&amp;&amp;|\|\||\*\/)\s*(\/)(?![\/*])(?=(?:[^\/\\\[\()]|\\.|\[([^\]\\]|\\.)+\]|\(([^\)\\]|\\.)+\))+\/([gimsuy]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(/)([gimsuy]*)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.imba</string>
            <key>begin</key>
            <string>((?&lt;![_$[:alnum:])\]]|\+\+|--|}|\*\/)|((?&lt;=^return|[^\._$[:alnum:]]return|^case|[^\._$[:alnum:]]case))\s*)\/(?![\/*])(?=(?:[^\/\\\[]|\\.|\[([^\]\\]|\\.)+\])+\/([gimsuy]+|(?![\/\*])|(?=\/\*))(?!\s*[a-zA-Z0-9_$]))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(/)([gimsuy]*)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>regexp</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.anchor.regexp</string>
            <key>match</key>
            <string>\\[bB]|\^|\$</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\\[1-9]\d*|\\k&lt;([a-zA-Z_$][\w$]*)&gt;</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.other.back-reference.regexp</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.other.regexp</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.quantifier.regexp</string>
            <key>match</key>
            <string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.or.regexp</string>
            <key>match</key>
            <string>\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.group.assertion.regexp</string>
            <key>begin</key>
            <string>(\()((\?=)|(\?!)|(\?&lt;=)|(\?&lt;!))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.assertion.regexp</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>meta.assertion.look-ahead.regexp</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>meta.assertion.negative-look-ahead.regexp</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>meta.assertion.look-behind.regexp</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>meta.assertion.negative-look-behind.regexp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.group.regexp</string>
            <key>begin</key>
            <string>\((?:(\?:)|(?:\?&lt;([a-zA-Z_$][\w$]*)&gt;))?</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.no-capture.regexp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.other.regexp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.other.character-class.set.regexp</string>
            <key>begin</key>
            <string>(\[)(\^)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.regexp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.negation.regexp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\])</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.regexp</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.other.character-class.range.regexp</string>
                <key>match</key>
                <string>(?:.|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\c[A-Z])|(\\.))</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.numeric.regexp</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.control.regexp</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.escape.backslash.regexp</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.numeric.regexp</string>
                  </dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.control.regexp</string>
                  </dict>
                  <key>6</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.escape.backslash.regexp</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex-character-class</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex-character-class</string>
          </dict>
        </array>
      </dict>
      <key>regex-character-class</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.other.character-class.regexp</string>
            <key>match</key>
            <string>\\[wWsSdDtrnvf]|\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.numeric.regexp</string>
            <key>match</key>
            <string>\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.control.regexp</string>
            <key>match</key>
            <string>\\c[A-Z]</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.backslash.regexp</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.documentation.imba</string>
            <key>begin</key>
            <string>/\*\*(?!/)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#docblock</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.block.imba</string>
            <key>begin</key>
            <string>(/\*)(?:\s*((@)internal)(?=\s|(\*/)))?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.internaldeclaration.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.decorator.internaldeclaration.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.block.imba</string>
            <key>begin</key>
            <string>(###)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>###(?:[ \t]*\n)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^[ \t]+)?((//|\#\s)(?:\s*((@)internal)(?=\s|$))?)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.imba</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.imba</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>storage.type.internaldeclaration.imba</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.decorator.internaldeclaration.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
            <key>contentName</key>
            <string>comment.line.double-slash.imba</string>
          </dict>
        </array>
      </dict>
      <key>single-line-comment-consuming-line-ending</key>
      <dict>
        <key>begin</key>
        <string>(^[ \t]+)?((//|\#\s)(?:\s*((@)internal)(?=\s|$))?)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.whitespace.comment.leading.imba</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>comment.line.double-slash.imba</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.imba</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>storage.type.internaldeclaration.imba</string>
          </dict>
          <key>5</key>
          <dict>
            <key>name</key>
            <string>punctuation.decorator.internaldeclaration.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=^)</string>
        <key>contentName</key>
        <string>comment.line.double-slash.imba</string>
      </dict>
      <key>directives</key>
      <dict>
        <key>name</key>
        <string>comment.line.triple-slash.directive.imba</string>
        <key>begin</key>
        <string>^(///)\s*(?=&lt;(reference|amd-dependency|amd-module)(\s+(path|types|no-default-lib|lib|name)\s*=\s*((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)))+\s*/&gt;\s*$)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.imba</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=$)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.tag.imba</string>
            <key>begin</key>
            <string>(&lt;)(reference|amd-dependency|amd-module)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.tag.directive.imba</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.tag.directive.imba</string>
              </dict>
            </dict>
            <key>end</key>
            <string>/&gt;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.tag.directive.imba</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>entity.other.attribute-name.directive.imba</string>
                <key>match</key>
                <string>path|types|no-default-lib|lib|name</string>
              </dict>
              <dict>
                <key>name</key>
                <string>keyword.operator.assignment.imba</string>
                <key>match</key>
                <string>=</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>docblock</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)
((@)(?:access|api))
\s+
(private|protected|public)
\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.language.access-type.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
((@)author)
\s+
(
  [^@\s&lt;&gt;*/]
  (?:[^@&lt;&gt;*/]|\*[^/])*
)
(?:
  \s*
  (&lt;)
  ([^&gt;\s]+)
  (&gt;)
)?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.angle.begin.jsdoc</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>constant.other.email.link.underline.jsdoc</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.angle.end.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
((@)borrows) \s+
((?:[^@\s*/]|\*[^/])+)    # &lt;that namepath&gt;
\s+ (as) \s+              # as
((?:[^@\s*/]|\*[^/])+)    # &lt;this namepath&gt;</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.control.jsdoc</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.example.jsdoc</string>
            <key>begin</key>
            <string>((@)example)\s+</string>
            <key>end</key>
            <string>(?=@|\*/)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>^\s\*\s+</string>
              </dict>
              <dict>
                <key>contentName</key>
                <string>constant.other.description.jsdoc</string>
                <key>begin</key>
                <string>\G(&lt;)caption(&gt;)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>entity.name.tag.inline.jsdoc</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.bracket.angle.begin.jsdoc</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.bracket.angle.end.jsdoc</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(&lt;/)caption(&gt;)|(?=\*/)</string>
                <key>endCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>entity.name.tag.inline.jsdoc</string>
                  </dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.bracket.angle.begin.jsdoc</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.bracket.angle.end.jsdoc</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>[^\s@*](?:[^*]|\*[^/])*</string>
                <key>captures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>source.embedded.imba</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x) ((@)kind) \s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>constant.language.symbol-type.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
((@)see)
\s+
(?:
  # URL
  (
    (?=https?://)
    (?:[^\s*]|\*[^/])+
  )
  |
  # JSDoc namepath
  (
    (?!
      # Avoid matching bare URIs (also acceptable as links)
      https?://
      |
      # Avoid matching {@inline tags}; we match those below
      (?:\[[^\[\]]*\])? # Possible description [preceding]{@tag}
      {@(?:link|linkcode|linkplain|tutorial)\b
    )
    # Matched namepath
    (?:[^@\s*/]|\*[^/])+
  )
)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.link.underline.jsdoc</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
((@)template)
\s+
# One or more valid identifiers
(
  [A-Za-z_$]         # First character: non-numeric word character
  [\w$.\[\]]*        # Rest of identifier
  (?:                # Possible list of additional identifiers
    \s* , \s*
    [A-Za-z_$]
    [\w$.\[\]]*
  )*
)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
(
  (@)
  (?:arg|argument|const|constant|member|namespace|param|var)
)
\s+
(
  [A-Za-z_$]
  [\w$.\[\]]*
)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>((@)typedef)\s+(?={)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#jsdoctype</string>
              </dict>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
                <key>match</key>
                <string>(?:[^@\s*/]|\*[^/])+</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\s+(?={)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#jsdoctype</string>
              </dict>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
                <key>match</key>
                <string>([A-Za-z_$][\w$.\[\]]*)</string>
              </dict>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
                <key>match</key>
                <string>(?x)
(\[)\s*
[\w$]+
(?:
  (?:\[\])?                                        # Foo[ ].bar properties within an array
  \.                                                # Foo.Bar namespaced parameter
  [\w$]+
)*
(?:
  \s*
  (=)                                                # [foo=bar] Default parameter value
  \s*
  (
    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes
    (?&gt;
      "(?:(?:\*(?!/))|(?:\\(?!"))|[^*\\])*?" |                      # [foo="bar"] Double-quoted
      '(?:(?:\*(?!/))|(?:\\(?!'))|[^*\\])*?' |                      # [foo='bar'] Single-quoted
      \[ (?:(?:\*(?!/))|[^*])*? \] |                                # [foo=[1,2]] Array literal
      (?:(?:\*(?!/))|\s(?!\s*\])|\[.*?(?:\]|(?=\*/))|[^*\s\[\]])*   # Everything else
    )*
  )
)?
\s*(?:(\])((?:[^*\s]|\*[^\s/])+)?|(?=\*/))</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.optional-value.begin.bracket.square.jsdoc</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.operator.assignment.jsdoc</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>source.embedded.imba</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.optional-value.end.bracket.square.jsdoc</string>
                  </dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>invalid.illegal.syntax.jsdoc</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?x)
(
  (@)
  (?:define|enum|exception|export|extends|lends|implements|modifies
  |namespace|private|protected|returns?|suppress|this|throws|type
  |yields?)
)
\s+(?={)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\s|\*/|[^{}\[\]A-Za-z_$])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#jsdoctype</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
(
  (@)
  (?:alias|augments|callback|constructs|emits|event|fires|exports?
  |extends|external|function|func|host|lends|listens|interface|memberof!?
  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)
)
\s+
(
  (?:
    [^{}@\s*] | \*[^/]
  )+
)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>contentName</key>
            <string>variable.other.jsdoc</string>
            <key>begin</key>
            <string>((@)(?:default(?:value)?|license|version))\s+(([''"]))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.jsdoc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\3)|(?=$|\*/)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>((@)(?:default(?:value)?|license|tutorial|variation|version))\s+([^\s*]+)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.class.jsdoc</string>
            <key>match</key>
            <string>(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#inline-tags</string>
          </dict>
          <dict>
            <key>match</key>
            <string>((@)(?:[_$[:alpha:]][_$[:alnum:]]*(?:\-[_$[:alnum:]]+)*[\?\!]?))(?=\s+)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.tag.jsdoc</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>brackets</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>{</string>
            <key>end</key>
            <string>}|(?=\*/)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#brackets</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>\[</string>
            <key>end</key>
            <string>\]|(?=\*/)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#brackets</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>inline-tags</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.other.description.jsdoc</string>
            <key>match</key>
            <string>(\[)[^\]]+(\])(?={@(?:link|linkcode|linkplain|tutorial))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.square.begin.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.square.end.jsdoc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.type.instance.jsdoc</string>
            <key>begin</key>
            <string>({)((@)(?:link(?:code|plain)?|tutorial))\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.curly.begin.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.class.jsdoc</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.inline.tag.jsdoc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>}|(?=\*/)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.curly.end.jsdoc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>\G((?=https?://)(?:[^|}\s*]|\*[/])+)(\|)?</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>variable.other.link.underline.jsdoc</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.separator.pipe.jsdoc</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>match</key>
                <string>\G((?:[^{}@\s|*]|\*[^/])+)(\|)?</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>variable.other.description.jsdoc</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.separator.pipe.jsdoc</string>
                  </dict>
                </dict>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>jsdoctype</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>invalid.illegal.type.jsdoc</string>
            <key>match</key>
            <string>\G{(?:[^}*]|\*[^/}])+$</string>
          </dict>
          <dict>
            <key>contentName</key>
            <string>entity.name.type.instance.jsdoc</string>
            <key>begin</key>
            <string>\G({)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.curly.begin.jsdoc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>((}))\s*|(?=\*/)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.instance.jsdoc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.curly.end.jsdoc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#brackets</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>
